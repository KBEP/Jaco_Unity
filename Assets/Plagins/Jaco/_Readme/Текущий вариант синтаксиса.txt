Текущий вариант.



Учитывает, что не все письменности используют пробелы между словами, например: японский, китайский.



Переменная для замены экранируется символом ~, это гарантирует различение обычного текста и переменной:

	Съешь ещё этих мягких французских ~pastry~, да выпей чаю.

Допустим, где-то в соответствующем VarProvider'е определена переменная pastry со значением "булка". Тогда, после выполнения замены, текст будет выглядеть так:

	Съешь ещё этих мягких французских булка, да выпей чаю.



Можно передавать дополнительные модификаторы переменной, используя фигурные скобки:

	Съешь ещё этих мягких французских ~pastry~{мн05}, да выпей чаю.

Выдаст:

	Съешь ещё этих мягких французских булки, да выпей чаю.



Можно передать несколько модификаторов, для этого их нужно разделить вертикальной чертой:

	Съешь ещё этих мягких французских ~pastry~{мн05|род}, да выпей чаю.

Выдаст:

	Съешь ещё этих мягких французских булкок, да выпей чаю.



Jaco поддерживает автоматическую конвертацию числа в соответствующий модификатор:

	Съешь ещё этих мягких французских ~pastry~{100500|род}, да выпей чаю.

Конвертирует число 100500 в модификатор "мн05" и выдаст:

	Съешь ещё этих мягких французских булкок, да выпей чаю.



В качестве модификатора можно использовать другую переменную, для этого её тоже нужно заключить в фигурные скобки:

	Съешь ещё этих мягких французских ~pastry~{~pasty_count~|род}, да выпей чаю.

Например, если pasty_count равно 999 выдаст вполне ожидаемое:

	Съешь ещё этих мягких французских булок, да выпей чаю.



Вот так будет ещё интереснее:

	Съешь ещё ~pasty_count~ мягких французских ~pastry~{~pasty_count~|род}, да выпей чаю.

Выдаст:

	Съешь ещё 999 мягких французских булок, да выпей чаю.